name: Deploy Angular to IONOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular (production)
        run: npm run build -- --configuration production --base-href  /browser/htdocs

      - name: Show build output (debug)
        run: |
          echo "Build directories:"
          ls -la dist/
          echo "Index.html location:"
          find dist -maxdepth 3 -name "index.html" -print

      - name: Install lftp
        run: sudo apt-get update -y && sudo apt-get install -y lftp

      - name: Write version file
        run: |
          mkdir -p dist/version-info
          echo "Commit SHA: $GITHUB_SHA" > dist/version-info/version.txt
          date +"%Y-%m-%d %H:%M:%S %Z" >> dist/version-info/version.txt

      - name: Deploy to IONOS via SFTP mirror
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          LOCAL_DIR="dist/dr-omar-mahdjoub-app"
          echo "LOCAL_DIR=$LOCAL_DIR"
          echo "REMOTE_DIR=$REMOTE_DIR"

          if [ ! -d "$LOCAL_DIR" ]; then
            echo "Erreur : répertoire $LOCAL_DIR introuvable"
            exit 1
          fi

          lftp -u "$USERNAME","$PASSWORD" sftp://$HOST << EOF
          set sftp:auto-confirm yes
          set net:max-retries 2
          set net:timeout 30
          mkdir -p "$REMOTE_DIR"
          mirror -R --delete --verbose --parallel=4 "$LOCAL_DIR" "$REMOTE_DIR"
          bye
          EOF

      - name: List remote dirs (debug)
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          lftp -u "$USERNAME","$PASSWORD" sftp://$HOST << EOF
          set sftp:auto-confirm yes
          echo "== Liste du dossier distant =="
          cd "$REMOTE_DIR" || echo "Impossible d'accéder à REMOTE_DIR"
          pwd
          cls -al
          bye
          EOF
